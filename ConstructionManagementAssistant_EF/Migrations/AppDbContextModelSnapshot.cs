// <auto-generated />
using System;
using ConstructionManagementAssistant_EF.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConstructionManagementAssistant_EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UniqueEmail")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex(new[] { "PhoneNumber" }, "UniquePhoneNumber")
                        .IsUnique();

                    b.ToTable("Clients", null, t =>
                        {
                            t.HasCheckConstraint("CK_Clients_ClientType", "[ClientType] BETWEEN 1 AND 2");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmed@example.com",
                            FullName = "أحمد محمد",
                            IsDeleted = false,
                            PhoneNumber = "1121456789"
                        },
                        new
                        {
                            Id = 2,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara@example.com",
                            FullName = "سارة علي",
                            IsDeleted = false,
                            PhoneNumber = "2927654321"
                        },
                        new
                        {
                            Id = 3,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohamed@example.com",
                            FullName = "محمد حسن",
                            IsDeleted = false,
                            PhoneNumber = "31128833445"
                        },
                        new
                        {
                            Id = 4,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "leila@example.com",
                            FullName = "ليلى إبراهيم",
                            IsDeleted = false,
                            PhoneNumber = "4243344556"
                        },
                        new
                        {
                            Id = 5,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali@example.com",
                            FullName = "علي يوسف",
                            IsDeleted = false,
                            PhoneNumber = "0344455667"
                        },
                        new
                        {
                            Id = 6,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fatima@example.com",
                            FullName = "فاطمة سعيد",
                            IsDeleted = false,
                            PhoneNumber = "5445566778"
                        },
                        new
                        {
                            Id = 7,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khaled@example.com",
                            FullName = "خالد عبد الله",
                            IsDeleted = false,
                            PhoneNumber = "6556677889"
                        },
                        new
                        {
                            Id = 8,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariam@example.com",
                            FullName = "مريم أحمد",
                            IsDeleted = false,
                            PhoneNumber = "7667788990"
                        },
                        new
                        {
                            Id = 9,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "youssef@example.com",
                            FullName = "يوسف علي",
                            IsDeleted = false,
                            PhoneNumber = "0878899001"
                        },
                        new
                        {
                            Id = 10,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nora@example.com",
                            FullName = "نورا محمد",
                            IsDeleted = false,
                            PhoneNumber = "9889900112"
                        },
                        new
                        {
                            Id = 11,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hassan@example.com",
                            FullName = "حسن علي",
                            IsDeleted = false,
                            PhoneNumber = "14490011223"
                        },
                        new
                        {
                            Id = 12,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mona@example.com",
                            FullName = "منى سعيد",
                            IsDeleted = false,
                            PhoneNumber = "01022122334"
                        },
                        new
                        {
                            Id = 13,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "omar@example.com",
                            FullName = "عمر خالد",
                            IsDeleted = false,
                            PhoneNumber = "01112233445"
                        },
                        new
                        {
                            Id = 14,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huda@example.com",
                            FullName = "هدى إبراهيم",
                            IsDeleted = false,
                            PhoneNumber = "2223344556"
                        },
                        new
                        {
                            Id = 15,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yasser@example.com",
                            FullName = "ياسر يوسف",
                            IsDeleted = false,
                            PhoneNumber = "03744455667"
                        },
                        new
                        {
                            Id = 16,
                            ClientType = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nadia@example.com",
                            FullName = "نادية سعيد",
                            IsDeleted = false,
                            PhoneNumber = "0045566778"
                        },
                        new
                        {
                            Id = 17,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "majed@example.com",
                            FullName = "ماجد عبد الله",
                            IsDeleted = false,
                            PhoneNumber = "9956677889"
                        },
                        new
                        {
                            Id = 18,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "salma@example.com",
                            FullName = "سلمى أحمد",
                            IsDeleted = false,
                            PhoneNumber = "0667788990"
                        },
                        new
                        {
                            Id = 19,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ziad@example.com",
                            FullName = "زياد علي",
                            IsDeleted = false,
                            PhoneNumber = "0228899001"
                        },
                        new
                        {
                            Id = 20,
                            ClientType = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "noor@example.com",
                            FullName = "نور محمد",
                            IsDeleted = false,
                            PhoneNumber = "0874900112"
                        });
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NationalNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ThirdName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "UniqueEmail")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex(new[] { "NationalNumber" }, "UniqueNationalNumber")
                        .IsUnique()
                        .HasFilter("[NationalNumber] IS NOT NULL");

                    b.HasIndex(new[] { "PhoneNumber" }, "UniquePhoneNumber")
                        .IsUnique();

                    b.ToTable("People", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("CancelationDate")
                        .HasColumnType("date");

                    b.Property<string>("CancelationReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly?>("ExpectedEndDate")
                        .HasColumnType("date");

                    b.Property<string>("GeographicalCoordinates")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("HandoverDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SiteAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SiteEngineerId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SiteEngineerId");

                    b.ToTable("Projects", null, t =>
                        {
                            t.HasCheckConstraint("CK_Project_CancelationCompletionDate", "([CancelationDate] IS NULL OR [CompletionDate] IS NULL)");

                            t.HasCheckConstraint("CK_Projects_Status", "[Status] BETWEEN 0 AND 4");
                        });
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Stage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("Name", "ProjectId")
                        .IsUnique()
                        .HasDatabaseName("IX_Stage_Name_ProjectId");

                    b.ToTable("Stages", (string)null);
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("StageId");

                    b.HasIndex("Name", "StageId")
                        .IsUnique()
                        .HasDatabaseName("IX_Task_Name_StageId");

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.WorkerSpecialty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UniqueSpecialtyName")
                        .IsUnique();

                    b.ToTable("WorkerSpecialties", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "نجار"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "حداد"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "سباك"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "كهربائي"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "بناء"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "دهان"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "مبلط"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "مقاول"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "مهندس معماري"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "مهندس مدني"
                        });
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.SiteEngineer", b =>
                {
                    b.HasBaseType("ConstructionManagementAssistant_Core.Entites.Person");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.ToTable("SiteEngineers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmed.engineer@example.com",
                            FirstName = "أحمد",
                            IsDeleted = false,
                            LastName = "محمد",
                            PhoneNumber = "01123456789",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sara.engineer@example.com",
                            FirstName = "سارة",
                            IsDeleted = false,
                            LastName = "علي",
                            PhoneNumber = "0987654321",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mohamed.engineer@example.com",
                            FirstName = "محمد",
                            IsDeleted = false,
                            LastName = "حسن",
                            PhoneNumber = "0112233445",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "leila.engineer@example.com",
                            FirstName = "ليلى",
                            IsDeleted = false,
                            LastName = "إبراهيم",
                            PhoneNumber = "0223344556",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ali.engineer@example.com",
                            FirstName = "علي",
                            IsDeleted = false,
                            LastName = "يوسف",
                            PhoneNumber = "0334455667",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fatima.engineer@example.com",
                            FirstName = "فاطمة",
                            IsDeleted = false,
                            LastName = "سعيد",
                            PhoneNumber = "0445566778",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "khaled.engineer@example.com",
                            FirstName = "خالد",
                            IsDeleted = false,
                            LastName = "عبد الله",
                            PhoneNumber = "0556677889",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariam.engineer@example.com",
                            FirstName = "مريم",
                            IsDeleted = false,
                            LastName = "أحمد",
                            PhoneNumber = "0667788990",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "youssef.engineer@example.com",
                            FirstName = "يوسف",
                            IsDeleted = false,
                            LastName = "علي",
                            PhoneNumber = "0778899001",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nora.engineer@example.com",
                            FirstName = "نورا",
                            IsDeleted = false,
                            LastName = "محمد",
                            PhoneNumber = "0889900112",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hassan.engineer@example.com",
                            FirstName = "حسن",
                            IsDeleted = false,
                            LastName = "علي",
                            PhoneNumber = "0990011223",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mona.engineer@example.com",
                            FirstName = "منى",
                            IsDeleted = false,
                            LastName = "سعيد",
                            PhoneNumber = "0106622334",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "omar.engineer@example.com",
                            FirstName = "عمر",
                            IsDeleted = false,
                            LastName = "خالد",
                            PhoneNumber = "00025533445",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "huda.engineer@example.com",
                            FirstName = "هدى",
                            IsDeleted = false,
                            LastName = "إبراهيم",
                            PhoneNumber = "01113446656",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "yasser.engineer@example.com",
                            FirstName = "ياسر",
                            IsDeleted = false,
                            LastName = "يوسف",
                            PhoneNumber = "0222005667",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nadia.engineer@example.com",
                            FirstName = "نادية",
                            IsDeleted = false,
                            LastName = "سعيد",
                            PhoneNumber = "4445555778",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "majed.engineer@example.com",
                            FirstName = "ماجد",
                            IsDeleted = false,
                            LastName = "عبد الله",
                            PhoneNumber = "0566677889",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "salma.engineer@example.com",
                            FirstName = "سلمى",
                            IsDeleted = false,
                            LastName = "أحمد",
                            PhoneNumber = "0688898990",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ziad.engineer@example.com",
                            FirstName = "زياد",
                            IsDeleted = false,
                            LastName = "علي",
                            PhoneNumber = "01118800001",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "noor.engineer@example.com",
                            FirstName = "نور",
                            IsDeleted = false,
                            LastName = "محمد",
                            PhoneNumber = "06900112",
                            HireDate = new DateOnly(2019, 8, 1),
                            IsAvailable = true
                        });
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Worker", b =>
                {
                    b.HasBaseType("ConstructionManagementAssistant_Core.Entites.Person");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int?>("SpecialtyId")
                        .HasColumnType("int");

                    b.HasIndex("SpecialtyId");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Project", b =>
                {
                    b.HasOne("ConstructionManagementAssistant_Core.Entites.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConstructionManagementAssistant_Core.Entites.SiteEngineer", "SiteEngineer")
                        .WithMany("Projects")
                        .HasForeignKey("SiteEngineerId");

                    b.Navigation("Client");

                    b.Navigation("SiteEngineer");
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Stage", b =>
                {
                    b.HasOne("ConstructionManagementAssistant_Core.Entites.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Task", b =>
                {
                    b.HasOne("ConstructionManagementAssistant_Core.Entites.Stage", "Stage")
                        .WithMany()
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.SiteEngineer", b =>
                {
                    b.HasOne("ConstructionManagementAssistant_Core.Entites.Person", null)
                        .WithOne()
                        .HasForeignKey("ConstructionManagementAssistant_Core.Entites.SiteEngineer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Worker", b =>
                {
                    b.HasOne("ConstructionManagementAssistant_Core.Entites.Person", null)
                        .WithOne()
                        .HasForeignKey("ConstructionManagementAssistant_Core.Worker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConstructionManagementAssistant_Core.Entites.WorkerSpecialty", "Specialty")
                        .WithMany("Workers")
                        .HasForeignKey("SpecialtyId");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.WorkerSpecialty", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("ConstructionManagementAssistant_Core.Entites.SiteEngineer", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
